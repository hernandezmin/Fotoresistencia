// Código C++ para medir distancia con sensor ultrasónico y controlar LED

// Definición de pines
int echoPin = 10; // Pin del sensor ultrasónico (echo)
int triggerPin = 11; // Pin de trigger del sensor ultrasónico
int ledPin = 13; // Pin del LED

// Función para leer la distancia ultrasónica
long readUltrasonicDistance() {
    // Configurar el pin de trigger como salida
    pinMode(triggerPin, OUTPUT);

    // Enviar pulso de trigger bajo por 2 microsegundos
    digitalWrite(triggerPin, LOW);
    delayMicroseconds(2);

    // Enviar pulso de trigger alto por 10 microsegundos
    digitalWrite(triggerPin, HIGH);
    delayMicroseconds(10);

    // Enviar pulso de trigger bajo de nuevo
    digitalWrite(triggerPin, LOW);

    // Configurar el pin de echo como entrada
    pinMode(echoPin, INPUT);

    // Medir la duración del pulso de echo en microsegundos
    long pulseDuration = pulseIn(echoPin, HIGH);

    // Devolver la duración del pulso de echo
    return pulseDuration;
}

// Función de configuración
void setup() {
    Serial.begin(9600);

    // Configurar el pin del LED como salida
    pinMode(ledPin, OUTPUT);
}

// Bucle principal
void loop() {
    // Leer la distancia ultrasónica y convertirla en cm
    long pulseDuration = readUltrasonicDistance();
    float distance = 0.01723 * pulseDuration;

    // Imprimir
    Serial.print("Distancia: ");
    Serial.print(distance);
    Serial.println(" cm");

    if (distance < 10) {
        digitalWrite(ledPin, HIGH);
    } else {
        digitalWrite(ledPin, LOW);
    }

    delay(100);
}
